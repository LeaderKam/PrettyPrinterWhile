/**
 * generated by Xtext 2.19.0
 */
package pretty.wh;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see pretty.wh.WhFactory
 * @model kind="package"
 * @generated
 */
public interface WhPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "wh";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.Wh.pretty";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "wh";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  WhPackage eINSTANCE = pretty.wh.impl.WhPackageImpl.init();

  /**
   * The meta object id for the '{@link pretty.wh.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.ProgramImpl
   * @see pretty.wh.impl.WhPackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Functions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__FUNCTIONS = 0;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link pretty.wh.impl.FunctionImpl <em>Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.FunctionImpl
   * @see pretty.wh.impl.WhPackageImpl#getFunction()
   * @generated
   */
  int FUNCTION = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__NAME = 0;

  /**
   * The feature id for the '<em><b>Definition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION__DEFINITION = 1;

  /**
   * The number of structural features of the '<em>Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link pretty.wh.impl.DefinitionImpl <em>Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.DefinitionImpl
   * @see pretty.wh.impl.WhPackageImpl#getDefinition()
   * @generated
   */
  int DEFINITION = 2;

  /**
   * The feature id for the '<em><b>Read</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__READ = 0;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__COMMANDS = 1;

  /**
   * The feature id for the '<em><b>Write</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__WRITE = 2;

  /**
   * The number of structural features of the '<em>Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link pretty.wh.impl.ReadImpl <em>Read</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.ReadImpl
   * @see pretty.wh.impl.WhPackageImpl#getRead()
   * @generated
   */
  int READ = 3;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int READ__VARIABLE = 0;

  /**
   * The number of structural features of the '<em>Read</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int READ_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link pretty.wh.impl.WriteImpl <em>Write</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.WriteImpl
   * @see pretty.wh.impl.WhPackageImpl#getWrite()
   * @generated
   */
  int WRITE = 4;

  /**
   * The feature id for the '<em><b>Variable</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE__VARIABLE = 0;

  /**
   * The number of structural features of the '<em>Write</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link pretty.wh.impl.AffectationImpl <em>Affectation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.AffectationImpl
   * @see pretty.wh.impl.WhPackageImpl#getAffectation()
   * @generated
   */
  int AFFECTATION = 5;

  /**
   * The feature id for the '<em><b>Affectations</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AFFECTATION__AFFECTATIONS = 0;

  /**
   * The feature id for the '<em><b>Valeurs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AFFECTATION__VALEURS = 1;

  /**
   * The number of structural features of the '<em>Affectation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AFFECTATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link pretty.wh.impl.NopImpl <em>Nop</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.NopImpl
   * @see pretty.wh.impl.WhPackageImpl#getNop()
   * @generated
   */
  int NOP = 6;

  /**
   * The feature id for the '<em><b>Nop</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOP__NOP = 0;

  /**
   * The number of structural features of the '<em>Nop</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOP_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link pretty.wh.impl.CommandsImpl <em>Commands</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.CommandsImpl
   * @see pretty.wh.impl.WhPackageImpl#getCommands()
   * @generated
   */
  int COMMANDS = 7;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMANDS__COMMANDS = 0;

  /**
   * The number of structural features of the '<em>Commands</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMANDS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link pretty.wh.impl.CommandImpl <em>Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.CommandImpl
   * @see pretty.wh.impl.WhPackageImpl#getCommand()
   * @generated
   */
  int COMMAND = 8;

  /**
   * The feature id for the '<em><b>Command</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND__COMMAND = 0;

  /**
   * The number of structural features of the '<em>Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link pretty.wh.impl.ForeachImpl <em>Foreach</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.ForeachImpl
   * @see pretty.wh.impl.WhPackageImpl#getForeach()
   * @generated
   */
  int FOREACH = 9;

  /**
   * The feature id for the '<em><b>Expr1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH__EXPR1 = 0;

  /**
   * The feature id for the '<em><b>Expr2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH__EXPR2 = 1;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH__COMMANDS = 2;

  /**
   * The number of structural features of the '<em>Foreach</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link pretty.wh.impl.IfImpl <em>If</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.IfImpl
   * @see pretty.wh.impl.WhPackageImpl#getIf()
   * @generated
   */
  int IF = 10;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF__EXPR = 0;

  /**
   * The feature id for the '<em><b>Commands1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF__COMMANDS1 = 1;

  /**
   * The feature id for the '<em><b>Commands2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF__COMMANDS2 = 2;

  /**
   * The number of structural features of the '<em>If</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link pretty.wh.impl.ForImpl <em>For</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.ForImpl
   * @see pretty.wh.impl.WhPackageImpl#getFor()
   * @generated
   */
  int FOR = 11;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR__EXPR = 0;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR__COMMANDS = 1;

  /**
   * The number of structural features of the '<em>For</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link pretty.wh.impl.WhileImpl <em>While</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.WhileImpl
   * @see pretty.wh.impl.WhPackageImpl#getWhile()
   * @generated
   */
  int WHILE = 12;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE__EXPR = 0;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE__COMMANDS = 1;

  /**
   * The number of structural features of the '<em>While</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link pretty.wh.impl.ExprImpl <em>Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.ExprImpl
   * @see pretty.wh.impl.WhPackageImpl#getExpr()
   * @generated
   */
  int EXPR = 13;

  /**
   * The feature id for the '<em><b>Valeur</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__VALEUR = 0;

  /**
   * The feature id for the '<em><b>Ope</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__OPE = 1;

  /**
   * The feature id for the '<em><b>Lexpr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__LEXPR = 2;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__EXPR = 3;

  /**
   * The feature id for the '<em><b>Ex1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__EX1 = 4;

  /**
   * The feature id for the '<em><b>Ex2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__EX2 = 5;

  /**
   * The number of structural features of the '<em>Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link pretty.wh.impl.LexprImpl <em>Lexpr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see pretty.wh.impl.LexprImpl
   * @see pretty.wh.impl.WhPackageImpl#getLexpr()
   * @generated
   */
  int LEXPR = 14;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEXPR__EXPRS = 0;

  /**
   * The number of structural features of the '<em>Lexpr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEXPR_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link pretty.wh.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see pretty.wh.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for the containment reference list '{@link pretty.wh.Program#getFunctions <em>Functions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Functions</em>'.
   * @see pretty.wh.Program#getFunctions()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Functions();

  /**
   * Returns the meta object for class '{@link pretty.wh.Function <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function</em>'.
   * @see pretty.wh.Function
   * @generated
   */
  EClass getFunction();

  /**
   * Returns the meta object for the attribute '{@link pretty.wh.Function#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see pretty.wh.Function#getName()
   * @see #getFunction()
   * @generated
   */
  EAttribute getFunction_Name();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Function#getDefinition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Definition</em>'.
   * @see pretty.wh.Function#getDefinition()
   * @see #getFunction()
   * @generated
   */
  EReference getFunction_Definition();

  /**
   * Returns the meta object for class '{@link pretty.wh.Definition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Definition</em>'.
   * @see pretty.wh.Definition
   * @generated
   */
  EClass getDefinition();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Definition#getRead <em>Read</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Read</em>'.
   * @see pretty.wh.Definition#getRead()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_Read();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Definition#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Commands</em>'.
   * @see pretty.wh.Definition#getCommands()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_Commands();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Definition#getWrite <em>Write</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Write</em>'.
   * @see pretty.wh.Definition#getWrite()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_Write();

  /**
   * Returns the meta object for class '{@link pretty.wh.Read <em>Read</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Read</em>'.
   * @see pretty.wh.Read
   * @generated
   */
  EClass getRead();

  /**
   * Returns the meta object for the attribute list '{@link pretty.wh.Read#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Variable</em>'.
   * @see pretty.wh.Read#getVariable()
   * @see #getRead()
   * @generated
   */
  EAttribute getRead_Variable();

  /**
   * Returns the meta object for class '{@link pretty.wh.Write <em>Write</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Write</em>'.
   * @see pretty.wh.Write
   * @generated
   */
  EClass getWrite();

  /**
   * Returns the meta object for the attribute list '{@link pretty.wh.Write#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Variable</em>'.
   * @see pretty.wh.Write#getVariable()
   * @see #getWrite()
   * @generated
   */
  EAttribute getWrite_Variable();

  /**
   * Returns the meta object for class '{@link pretty.wh.Affectation <em>Affectation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Affectation</em>'.
   * @see pretty.wh.Affectation
   * @generated
   */
  EClass getAffectation();

  /**
   * Returns the meta object for the attribute list '{@link pretty.wh.Affectation#getAffectations <em>Affectations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Affectations</em>'.
   * @see pretty.wh.Affectation#getAffectations()
   * @see #getAffectation()
   * @generated
   */
  EAttribute getAffectation_Affectations();

  /**
   * Returns the meta object for the containment reference list '{@link pretty.wh.Affectation#getValeurs <em>Valeurs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Valeurs</em>'.
   * @see pretty.wh.Affectation#getValeurs()
   * @see #getAffectation()
   * @generated
   */
  EReference getAffectation_Valeurs();

  /**
   * Returns the meta object for class '{@link pretty.wh.Nop <em>Nop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nop</em>'.
   * @see pretty.wh.Nop
   * @generated
   */
  EClass getNop();

  /**
   * Returns the meta object for the attribute '{@link pretty.wh.Nop#getNop <em>Nop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nop</em>'.
   * @see pretty.wh.Nop#getNop()
   * @see #getNop()
   * @generated
   */
  EAttribute getNop_Nop();

  /**
   * Returns the meta object for class '{@link pretty.wh.Commands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Commands</em>'.
   * @see pretty.wh.Commands
   * @generated
   */
  EClass getCommands();

  /**
   * Returns the meta object for the containment reference list '{@link pretty.wh.Commands#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see pretty.wh.Commands#getCommands()
   * @see #getCommands()
   * @generated
   */
  EReference getCommands_Commands();

  /**
   * Returns the meta object for class '{@link pretty.wh.Command <em>Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Command</em>'.
   * @see pretty.wh.Command
   * @generated
   */
  EClass getCommand();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Command#getCommand <em>Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Command</em>'.
   * @see pretty.wh.Command#getCommand()
   * @see #getCommand()
   * @generated
   */
  EReference getCommand_Command();

  /**
   * Returns the meta object for class '{@link pretty.wh.Foreach <em>Foreach</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Foreach</em>'.
   * @see pretty.wh.Foreach
   * @generated
   */
  EClass getForeach();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Foreach#getExpr1 <em>Expr1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr1</em>'.
   * @see pretty.wh.Foreach#getExpr1()
   * @see #getForeach()
   * @generated
   */
  EReference getForeach_Expr1();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Foreach#getExpr2 <em>Expr2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr2</em>'.
   * @see pretty.wh.Foreach#getExpr2()
   * @see #getForeach()
   * @generated
   */
  EReference getForeach_Expr2();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Foreach#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Commands</em>'.
   * @see pretty.wh.Foreach#getCommands()
   * @see #getForeach()
   * @generated
   */
  EReference getForeach_Commands();

  /**
   * Returns the meta object for class '{@link pretty.wh.If <em>If</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If</em>'.
   * @see pretty.wh.If
   * @generated
   */
  EClass getIf();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.If#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see pretty.wh.If#getExpr()
   * @see #getIf()
   * @generated
   */
  EReference getIf_Expr();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.If#getCommands1 <em>Commands1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Commands1</em>'.
   * @see pretty.wh.If#getCommands1()
   * @see #getIf()
   * @generated
   */
  EReference getIf_Commands1();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.If#getCommands2 <em>Commands2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Commands2</em>'.
   * @see pretty.wh.If#getCommands2()
   * @see #getIf()
   * @generated
   */
  EReference getIf_Commands2();

  /**
   * Returns the meta object for class '{@link pretty.wh.For <em>For</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For</em>'.
   * @see pretty.wh.For
   * @generated
   */
  EClass getFor();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.For#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see pretty.wh.For#getExpr()
   * @see #getFor()
   * @generated
   */
  EReference getFor_Expr();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.For#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Commands</em>'.
   * @see pretty.wh.For#getCommands()
   * @see #getFor()
   * @generated
   */
  EReference getFor_Commands();

  /**
   * Returns the meta object for class '{@link pretty.wh.While <em>While</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>While</em>'.
   * @see pretty.wh.While
   * @generated
   */
  EClass getWhile();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.While#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see pretty.wh.While#getExpr()
   * @see #getWhile()
   * @generated
   */
  EReference getWhile_Expr();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.While#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Commands</em>'.
   * @see pretty.wh.While#getCommands()
   * @see #getWhile()
   * @generated
   */
  EReference getWhile_Commands();

  /**
   * Returns the meta object for class '{@link pretty.wh.Expr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr</em>'.
   * @see pretty.wh.Expr
   * @generated
   */
  EClass getExpr();

  /**
   * Returns the meta object for the attribute '{@link pretty.wh.Expr#getValeur <em>Valeur</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Valeur</em>'.
   * @see pretty.wh.Expr#getValeur()
   * @see #getExpr()
   * @generated
   */
  EAttribute getExpr_Valeur();

  /**
   * Returns the meta object for the attribute '{@link pretty.wh.Expr#getOpe <em>Ope</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Ope</em>'.
   * @see pretty.wh.Expr#getOpe()
   * @see #getExpr()
   * @generated
   */
  EAttribute getExpr_Ope();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Expr#getLexpr <em>Lexpr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lexpr</em>'.
   * @see pretty.wh.Expr#getLexpr()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Lexpr();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Expr#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see pretty.wh.Expr#getExpr()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Expr();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Expr#getEx1 <em>Ex1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ex1</em>'.
   * @see pretty.wh.Expr#getEx1()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Ex1();

  /**
   * Returns the meta object for the containment reference '{@link pretty.wh.Expr#getEx2 <em>Ex2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ex2</em>'.
   * @see pretty.wh.Expr#getEx2()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Ex2();

  /**
   * Returns the meta object for class '{@link pretty.wh.Lexpr <em>Lexpr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Lexpr</em>'.
   * @see pretty.wh.Lexpr
   * @generated
   */
  EClass getLexpr();

  /**
   * Returns the meta object for the containment reference list '{@link pretty.wh.Lexpr#getExprs <em>Exprs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exprs</em>'.
   * @see pretty.wh.Lexpr#getExprs()
   * @see #getLexpr()
   * @generated
   */
  EReference getLexpr_Exprs();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  WhFactory getWhFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link pretty.wh.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.ProgramImpl
     * @see pretty.wh.impl.WhPackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '<em><b>Functions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__FUNCTIONS = eINSTANCE.getProgram_Functions();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.FunctionImpl <em>Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.FunctionImpl
     * @see pretty.wh.impl.WhPackageImpl#getFunction()
     * @generated
     */
    EClass FUNCTION = eINSTANCE.getFunction();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION__NAME = eINSTANCE.getFunction_Name();

    /**
     * The meta object literal for the '<em><b>Definition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION__DEFINITION = eINSTANCE.getFunction_Definition();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.DefinitionImpl <em>Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.DefinitionImpl
     * @see pretty.wh.impl.WhPackageImpl#getDefinition()
     * @generated
     */
    EClass DEFINITION = eINSTANCE.getDefinition();

    /**
     * The meta object literal for the '<em><b>Read</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__READ = eINSTANCE.getDefinition_Read();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__COMMANDS = eINSTANCE.getDefinition_Commands();

    /**
     * The meta object literal for the '<em><b>Write</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__WRITE = eINSTANCE.getDefinition_Write();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.ReadImpl <em>Read</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.ReadImpl
     * @see pretty.wh.impl.WhPackageImpl#getRead()
     * @generated
     */
    EClass READ = eINSTANCE.getRead();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute READ__VARIABLE = eINSTANCE.getRead_Variable();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.WriteImpl <em>Write</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.WriteImpl
     * @see pretty.wh.impl.WhPackageImpl#getWrite()
     * @generated
     */
    EClass WRITE = eINSTANCE.getWrite();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute WRITE__VARIABLE = eINSTANCE.getWrite_Variable();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.AffectationImpl <em>Affectation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.AffectationImpl
     * @see pretty.wh.impl.WhPackageImpl#getAffectation()
     * @generated
     */
    EClass AFFECTATION = eINSTANCE.getAffectation();

    /**
     * The meta object literal for the '<em><b>Affectations</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AFFECTATION__AFFECTATIONS = eINSTANCE.getAffectation_Affectations();

    /**
     * The meta object literal for the '<em><b>Valeurs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AFFECTATION__VALEURS = eINSTANCE.getAffectation_Valeurs();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.NopImpl <em>Nop</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.NopImpl
     * @see pretty.wh.impl.WhPackageImpl#getNop()
     * @generated
     */
    EClass NOP = eINSTANCE.getNop();

    /**
     * The meta object literal for the '<em><b>Nop</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NOP__NOP = eINSTANCE.getNop_Nop();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.CommandsImpl <em>Commands</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.CommandsImpl
     * @see pretty.wh.impl.WhPackageImpl#getCommands()
     * @generated
     */
    EClass COMMANDS = eINSTANCE.getCommands();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMANDS__COMMANDS = eINSTANCE.getCommands_Commands();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.CommandImpl <em>Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.CommandImpl
     * @see pretty.wh.impl.WhPackageImpl#getCommand()
     * @generated
     */
    EClass COMMAND = eINSTANCE.getCommand();

    /**
     * The meta object literal for the '<em><b>Command</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMAND__COMMAND = eINSTANCE.getCommand_Command();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.ForeachImpl <em>Foreach</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.ForeachImpl
     * @see pretty.wh.impl.WhPackageImpl#getForeach()
     * @generated
     */
    EClass FOREACH = eINSTANCE.getForeach();

    /**
     * The meta object literal for the '<em><b>Expr1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREACH__EXPR1 = eINSTANCE.getForeach_Expr1();

    /**
     * The meta object literal for the '<em><b>Expr2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREACH__EXPR2 = eINSTANCE.getForeach_Expr2();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREACH__COMMANDS = eINSTANCE.getForeach_Commands();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.IfImpl <em>If</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.IfImpl
     * @see pretty.wh.impl.WhPackageImpl#getIf()
     * @generated
     */
    EClass IF = eINSTANCE.getIf();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF__EXPR = eINSTANCE.getIf_Expr();

    /**
     * The meta object literal for the '<em><b>Commands1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF__COMMANDS1 = eINSTANCE.getIf_Commands1();

    /**
     * The meta object literal for the '<em><b>Commands2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF__COMMANDS2 = eINSTANCE.getIf_Commands2();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.ForImpl <em>For</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.ForImpl
     * @see pretty.wh.impl.WhPackageImpl#getFor()
     * @generated
     */
    EClass FOR = eINSTANCE.getFor();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR__EXPR = eINSTANCE.getFor_Expr();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR__COMMANDS = eINSTANCE.getFor_Commands();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.WhileImpl <em>While</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.WhileImpl
     * @see pretty.wh.impl.WhPackageImpl#getWhile()
     * @generated
     */
    EClass WHILE = eINSTANCE.getWhile();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE__EXPR = eINSTANCE.getWhile_Expr();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE__COMMANDS = eINSTANCE.getWhile_Commands();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.ExprImpl <em>Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.ExprImpl
     * @see pretty.wh.impl.WhPackageImpl#getExpr()
     * @generated
     */
    EClass EXPR = eINSTANCE.getExpr();

    /**
     * The meta object literal for the '<em><b>Valeur</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPR__VALEUR = eINSTANCE.getExpr_Valeur();

    /**
     * The meta object literal for the '<em><b>Ope</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPR__OPE = eINSTANCE.getExpr_Ope();

    /**
     * The meta object literal for the '<em><b>Lexpr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__LEXPR = eINSTANCE.getExpr_Lexpr();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__EXPR = eINSTANCE.getExpr_Expr();

    /**
     * The meta object literal for the '<em><b>Ex1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__EX1 = eINSTANCE.getExpr_Ex1();

    /**
     * The meta object literal for the '<em><b>Ex2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__EX2 = eINSTANCE.getExpr_Ex2();

    /**
     * The meta object literal for the '{@link pretty.wh.impl.LexprImpl <em>Lexpr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see pretty.wh.impl.LexprImpl
     * @see pretty.wh.impl.WhPackageImpl#getLexpr()
     * @generated
     */
    EClass LEXPR = eINSTANCE.getLexpr();

    /**
     * The meta object literal for the '<em><b>Exprs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEXPR__EXPRS = eINSTANCE.getLexpr_Exprs();

  }

} //WhPackage
